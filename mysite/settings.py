"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

import dj_database_url
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
HF_API_TOKEN = os.getenv("HF_API_TOKEN")




env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))


# in settings.py
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "listings.forms": {  # use your module name
            "handlers": ["console"],
            "level": "DEBUG",
        },
    },
}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-gscvun=4pwq*cfeaw=2%ybp4th&d3=43)8-4d2ttx28ddtw8is"

# SECURITY WARNING: don't run with debug turned on in production!

if os.environ.get("DATABASE_URL"):
    DEBUG = False
else:
    DEBUG = True

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
else:
    SECURE_SSL_REDIRECT = False



ALLOWED_HOSTS = [
    "lora-app-6ebcf9c6d35a.herokuapp.com",
    "localhost",
    "127.0.0.1",
]  # Replace with your actual Heroku app name



# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "accounts",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "crispy_forms",
    "django_bootstrap5",
    "crispy_bootstrap5",
    "widget_tweaks",
    "boto3",  # Add this line to include the storages app
    "storages",  # Add this line to include the storages app
    "listings",  # Add your listings app here
    "patron_requests",
    "notifications",
    "website",
    "resource",
    "dj_database_url",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = "mysite.urls"


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "mysite", "templates"),
            os.path.join(BASE_DIR, "s3app", "templates"),
            os.path.join(BASE_DIR, "templates", "allauth"),
            os.path.join(BASE_DIR, "templates", "accounts"),
            os.path.join(
                BASE_DIR, "templates", "listings"
            ),  # Add this line to include the listings templates
            os.path.join(BASE_DIR, "templates", "patron_requests"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mysite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


if os.environ.get("DATABASE_URL"):
    DATABASES = {"default": dj_database_url.config(default=os.environ["DATABASE_URL"])}
elif os.environ.get("GITHUB_WORKFLOW"):
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": os.environ["DB_NAME"],
            "USER": os.environ["DB_USER"],
            "PASSWORD": os.environ["DB_PASSWORD"],
            "HOST": os.environ["DB_HOST"],
            "PORT": os.environ["DB_PORT"],
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True



# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": ["profile", "email"],
        "AUTH_PARAMS": {"access_type": "online"},
        "APP": {
            "client_id": os.environ.get("GOOGLE_CLIENT_ID"),
            "secret": os.environ.get("GOOGLE_CLIENT_SECRET"),
            "key": "",
        },
    }
}
ACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_QUERY_EMAIL = True

AUTH_USER_MODEL = "accounts.CustomUser"
CURRENT_DOMAIN = os.environ.get("CURRENT_DOMAIN", "127.0.0.1:8000")
SITE_ID = 1


LOGIN_REDIRECT_URL = "/dashboard"
ACCOUNT_LOGOUT_REDIRECT_URL = "/"

ACCOUNT_FORMS = {
    "signup": "accounts.forms.CustomSignupForm",
}

ACCOUNT_LOGIN_TEMPLATE = "account/login.html"
GOOGLE_LOGIN_REDIRECT_TEMPLATE = "account/login_redirect.html"
SOCIALACCOUNT_LOGIN_TEMPLATE = "socialaccount/login.html"
ACCOUNT_LOGOUT_TEMPLATE = "account/logout.html"
ACCOUNT_SIGNUP_TEMPLATE = "account/signup.html"
ACCOUNT_EMAIL_CHANGE_TEMPLATE = "account/email_change.html"
ACCOUNT_EMAIL_TEMPLATE = "account/email.html"
ACCOUNT_PASSWORD_CHANGE_TEMPLATE = "account/password_set.html"

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

...
# Use the console email backend for development
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_HOST_USER = "projectb15.cs3240@gmail.com"
EMAIL_HOST_PASSWORD = "nspw cyru twsy pqug"
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = "CS3240 Lora App"
...
# Amazon S3 settings

AWS_SECRET_ACCESS_KEY = os.environ.get(
    "AWS_SECRET_ACCESS_KEY"
)  # Use environment variable for security
AWS_ACCESS_KEY_ID = os.environ.get(
    "AWS_ACCESS_KEY_ID"
)  # Use environment variable for security
AWS_STORAGE_BUCKET_NAME = "cs3240loraapp"
AWS_S3_REGION_NAME = "us-east-1"  # e.g., 'us-west-2'
AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com"
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/"
AWS_DEFAULT_ACL = None
AWS_S3_OBJECT_PARAMETERS = {
    "CacheControl": "max-age=86400",
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


# S3 static and media files configuration

# Remove or comment out the Whitenoise storage setting:
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Replace with S3 storages configuration:
STATICFILES_STORAGE = "mysite.custom_storages.StaticStorage"
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
STATIC_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/static/"
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/media/"

TIME_ZONE = "America/New_York"
USE_TZ = True
